// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMDT_MOHINHMACCA.Models;

#nullable disable

namespace TMDT_MOHINHMACCA.Migrations
{
    [DbContext(typeof(ShopmaccaContext))]
    partial class ShopmaccaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Account", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USERNAME");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Avatar")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("AVATAR");

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("BIRTHDAY");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Fullname")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("FULLNAME");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("GENDER")
                        .IsFixedLength();

                    b.Property<string>("GoogleId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("GOOGLE_ID");

                    b.Property<decimal?>("Money")
                        .HasColumnType("money")
                        .HasColumnName("MONEY");

                    b.Property<string>("Password")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("PHONE");

                    b.Property<string>("Randomkey")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("RANDOMKEY");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.Property<DateTime?>("Signupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("SIGNUPDATE");

                    b.Property<bool?>("Validity")
                        .HasColumnType("bit")
                        .HasColumnName("VALIDITY");

                    b.HasKey("Username")
                        .HasName("PK__ACCOUNT__B15BE12F3966D95C");

                    b.HasIndex("RoleId");

                    b.ToTable("ACCOUNT", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Category", b =>
                {
                    b.Property<int>("CateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CATE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateId"));

                    b.Property<string>("CateImage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CATE_IMAGE");

                    b.Property<string>("CateName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CATE_NAME");

                    b.HasKey("CateId")
                        .HasName("PK__CATEGORI__EB0A758F05F8D0A4");

                    b.ToTable("CATEGORIES", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Choose", b =>
                {
                    b.Property<int>("ChooseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CHOOSE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChooseId"));

                    b.Property<string>("ChooseName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CHOOSE_NAME");

                    b.Property<int?>("ChooseTime")
                        .HasColumnType("int")
                        .HasColumnName("CHOOSE_TIME");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int?>("Discount")
                        .HasColumnType("int")
                        .HasColumnName("DISCOUNT");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("PRICE");

                    b.Property<string>("Rate")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RATE");

                    b.HasKey("ChooseId")
                        .HasName("PK__CHOOSES__80E419B8A7582BF5");

                    b.ToTable("CHOOSES", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MESSAGE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<string>("ReceiverId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RECEIVER_ID");

                    b.Property<string>("SenderId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SENDER_ID");

                    b.Property<DateTime?>("Senttime")
                        .HasColumnType("datetime")
                        .HasColumnName("SENTTIME");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.HasKey("MessageId")
                        .HasName("PK__MESSAGE__F610EE443884DFA2");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("MESSAGE", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ORDER_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Buyer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BUYER");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LINK");

                    b.Property<int?>("Numberday")
                        .HasColumnType("int")
                        .HasColumnName("NUMBERDAY");

                    b.Property<DateTime?>("OrderTime")
                        .HasColumnType("datetime")
                        .HasColumnName("ORDER_TIME");

                    b.Property<int?>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("POST_ID");

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("PRICE");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REQUIREMENTS");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REVIEW");

                    b.Property<double?>("Star")
                        .HasColumnType("float")
                        .HasColumnName("STAR");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("STATUS")
                        .IsFixedLength();

                    b.HasKey("OrderId")
                        .HasName("PK__ORDERS__460A9464DC95DBCB");

                    b.HasIndex("Buyer");

                    b.HasIndex("PostId");

                    b.ToTable("ORDERS", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.OrderDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DETAIL_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("ORDER_ID");

                    b.Property<string>("Person")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PERSON");

                    b.Property<string>("RequiType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("REQUI_TYPE")
                        .IsFixedLength();

                    b.Property<DateTime?>("Stamptime")
                        .HasColumnType("datetime")
                        .HasColumnName("STAMPTIME");

                    b.HasKey("DetailId")
                        .HasName("PK__ORDER_DE__76047C44793DC5B8");

                    b.HasIndex("OrderId");

                    b.HasIndex("Person");

                    b.ToTable("ORDER_DETAIL", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("POST_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<int?>("CateId")
                        .HasColumnType("int")
                        .HasColumnName("CATE_ID");

                    b.Property<int?>("ChooseId")
                        .HasColumnType("int")
                        .HasColumnName("CHOOSE_ID");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<string>("CoverImage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("COVER_IMAGE");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOTE");

                    b.Property<DateTime?>("PostApprovedtime")
                        .HasColumnType("datetime")
                        .HasColumnName("POST_APPROVEDTIME");

                    b.Property<DateTime?>("PostTime")
                        .HasColumnType("datetime")
                        .HasColumnName("POST_TIME");

                    b.Property<double?>("PriceTo")
                        .HasColumnType("float")
                        .HasColumnName("PRICE_TO");

                    b.Property<double?>("PriceUp")
                        .HasColumnType("float")
                        .HasColumnName("PRICE_UP");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("STATUS")
                        .IsFixedLength();

                    b.Property<string>("Technology")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TECHNOLOGY");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TITLE");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USERNAME");

                    b.HasKey("PostId")
                        .HasName("PK__POST__63FD1766EF102CCF");

                    b.HasIndex("CateId");

                    b.HasIndex("ChooseId");

                    b.HasIndex("Username");

                    b.ToTable("POST", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.PostImage", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("POST_ID");

                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IMAGE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("IMAGE");

                    b.HasKey("PostId", "ImageId")
                        .HasName("PK__POST_IMA__E4178F0E9C5E2952");

                    b.ToTable("POST_IMAGES", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ROLE_NAME");

                    b.HasKey("RoleId")
                        .HasName("PK__ROLES__5AC4D222B938A979");

                    b.ToTable("ROLES", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Transactionhistory", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTION_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal?>("Amountmoney")
                        .HasColumnType("money")
                        .HasColumnName("AMOUNTMONEY");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<decimal?>("Finalbalance")
                        .HasColumnType("money")
                        .HasColumnName("FINALBALANCE");

                    b.Property<decimal?>("Initialbalance")
                        .HasColumnType("money")
                        .HasColumnName("INITIALBALANCE");

                    b.Property<string>("Payments")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("PAYMENTS")
                        .IsFixedLength();

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("TRANSACTION_DATE");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("TRANSACTION_TYPE")
                        .IsFixedLength();

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USERNAME");

                    b.HasKey("TransactionId")
                        .HasName("PK__TRANSACT__16998B616BBE39A3");

                    b.HasIndex("Username");

                    b.ToTable("TRANSACTIONHISTORY", (string)null);
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Account", b =>
                {
                    b.HasOne("TMDT_MOHINHMACCA.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ACCOUNT__ROLE_ID__2A4B4B5E");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Message", b =>
                {
                    b.HasOne("TMDT_MOHINHMACCA.Models.Account", "Receiver")
                        .WithMany("MessageReceivers")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK__MESSAGE__RECEIVE__3D5E1FD2");

                    b.HasOne("TMDT_MOHINHMACCA.Models.Account", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK__MESSAGE__SENDER___3C69FB99");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Order", b =>
                {
                    b.HasOne("TMDT_MOHINHMACCA.Models.Account", "BuyerNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("Buyer")
                        .HasConstraintName("FK__ORDERS__BUYER__35BCFE0A");

                    b.HasOne("TMDT_MOHINHMACCA.Models.Post", "Post")
                        .WithMany("Orders")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ORDERS__POST_ID__34C8D9D1");

                    b.Navigation("BuyerNavigation");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.OrderDetail", b =>
                {
                    b.HasOne("TMDT_MOHINHMACCA.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__ORDER_DET__ORDER__38996AB5");

                    b.HasOne("TMDT_MOHINHMACCA.Models.Account", "PersonNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Person")
                        .HasConstraintName("FK__ORDER_DET__PERSO__398D8EEE");

                    b.Navigation("Order");

                    b.Navigation("PersonNavigation");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Post", b =>
                {
                    b.HasOne("TMDT_MOHINHMACCA.Models.Category", "Cate")
                        .WithMany("Posts")
                        .HasForeignKey("CateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__POST__CATE_ID__2D27B809");

                    b.HasOne("TMDT_MOHINHMACCA.Models.Choose", "Choose")
                        .WithMany("Posts")
                        .HasForeignKey("ChooseId")
                        .HasConstraintName("FK__POST__CHOOSE_ID__2F10007B");

                    b.HasOne("TMDT_MOHINHMACCA.Models.Account", "UsernameNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__POST__USERNAME__2E1BDC42");

                    b.Navigation("Cate");

                    b.Navigation("Choose");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.PostImage", b =>
                {
                    b.HasOne("TMDT_MOHINHMACCA.Models.Post", "Post")
                        .WithMany("PostImages")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__POST_IMAG__POST___31EC6D26");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Transactionhistory", b =>
                {
                    b.HasOne("TMDT_MOHINHMACCA.Models.Account", "UsernameNavigation")
                        .WithMany("Transactionhistories")
                        .HasForeignKey("Username")
                        .HasConstraintName("FK__TRANSACTI__USERN__5CD6CB2B");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Account", b =>
                {
                    b.Navigation("MessageReceivers");

                    b.Navigation("MessageSenders");

                    b.Navigation("OrderDetails");

                    b.Navigation("Orders");

                    b.Navigation("Posts");

                    b.Navigation("Transactionhistories");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Choose", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Post", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PostImages");
                });

            modelBuilder.Entity("TMDT_MOHINHMACCA.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
